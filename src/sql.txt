drop table ALLINFORMATION
CREATE TABLE ALLINFORMATION (
FIRSTNAME VARCHAR2(400 BYTE), 
	LASTNAME VARCHAR2(400 BYTE), 
	EMAIL VARCHAR2(400 BYTE), 
	GENDER VARCHAR2(400 BYTE), 
	DATEOFBIRTH VARCHAR2(400 BYTE), 
	WEIGHT VARCHAR2(400 BYTE), 
	BLOODPRESSURE VARCHAR2(400 BYTE), 
	COUNTRY VARCHAR2(400 BYTE), 
	STATE VARCHAR2(400 BYTE), 
	CITY VARCHAR2(400 BYTE), 
	PHONE VARCHAR2(400 BYTE), 
	SSN VARCHAR2(400 BYTE), 
	MARITIALSTATUS VARCHAR2(400 BYTE), 
	DOCTORINFO VARCHAR2(400 BYTE), 
	ORGANIZATIONINFO VARCHAR2(400 BYTE), 
	DISEASE VARCHAR2(400 BYTE), 
	SYMPTOMS VARCHAR2(400 BYTE), 
	HERBALS VARCHAR2(400 BYTE), 
	CHECKUPDATE VARCHAR2(400 BYTE),
  FILEID VARCHAR2(20 BYTE),
  IMPORTDATE DATE,
   USERID VARCHAR2(400 BYTE)
)
ORGANIZATION EXTERNAL (
  TYPE oracle_loader
  DEFAULT DIRECTORY DIMPORT
    ACCESS PARAMETERS (
    RECORDS DELIMITED BY NEWLINE
    BADFILE 'bad_%a_%p.bad'
    LOGFILE 'log_%a_%p.log'
    FIELDS TERMINATED BY ','
    MISSING FIELD VALUES ARE NULL
    REJECT ROWS WITH ALL NULL FIELDS
    (FIRSTNAME ,LASTNAME ,EMAIL ,GENDER ,DATEOFBIRTH ,WEIGHT ,BLOODPRESSURE ,COUNTRY ,STATE ,CITY ,PHONE ,SSN 
,MARITIALSTATUS ,DOCTORINFO ,ORGANIZATIONINFO ,DISEASE ,SYMPTOMS ,HERBALS ,CHECKUPDATE,FILEID ,IMPORTDATE,USERID))
    LOCATION ('data2.txt')
  )
PARALLEL
REJECT LIMIT unlimited
NOMONITORING;

select * from allinformation

CREATE SEQUENCE PATIENTSEQUENCE
  MINVALUE 1
  MAXVALUE 999999999999999999999999999
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  commit;
  
 CREATE OR REPLACE TRIGGER PATIENTTRIGGER
  BEFORE INSERT ON PATIENT
  FOR EACH ROW
BEGIN
  :new.id := PATIENTSEQUENCE.nextval;
END;
insert into patient(FIRSTNAME ,LASTNAME ,EMAIL ,GENDER ,DATEOFBIRTH ,WEIGHT ,BLOODPRESSURE ,COUNTRY ,STATE ,CITY ,PHONE ,SSN 
,MARITIALSTATUS,IMPORTDATE,FILEID,USERID)
 select trim(FIRSTNAME) ,trim(LASTNAME) ,trim(EMAIL) ,trim(GENDER) ,trim(to_timestamp(DATEOFBIRTH,'MM/DD/YYYY')) ,trim(WEIGHT) ,
 trim(BLOODPRESSURE) ,trim(COUNTRY) ,trim(STATE) ,trim(CITY) ,trim(PHONE) ,trim(SSN) 
,trim(MARITIALSTATUS),trim(IMPORTDATE),trim(FILEID),trim(USERID)  from allinformation

----- SYMPTOM DISESE ----

CREATE SEQUENCE SYMPTOMDISEASESEQUENCE
  MINVALUE 1
  MAXVALUE 999999999999999999999999999
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  commit
  
  CREATE OR REPLACE TRIGGER SYMPTOMDISEASESEQUENCETRIGGER
  BEFORE INSERT ON diseasesymptom
  FOR EACH ROW
BEGIN
  :new.id := SYMPTOMDISEASESEQUENCE.nextval;
END;
 commit;
 
insert into diseasesymptom(symptom,disease,patientid,herbal,fileid,userid,importdate) 
select  trim(symptoms),trim(disease),(select  id from patient where firstname=trim(a.firstname) and lastname=trim(a.lastname) 
and email=trim(a.email) and state=trim(a.state) and rownum<=1 )as id,trim(herbals),trim(fileid),trim(userid),trim(importdate) from allinformation a

------------------------------------
--Disease ---------------------
CREATE SEQUENCE DISEASESEQUENCE
  MINVALUE 1
  MAXVALUE 999999999999999999999999999
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  commit;
  CREATE OR REPLACE TRIGGER diseaseTrigger
  BEFORE INSERT ON DISEASE
  FOR EACH ROW
BEGIN
  :new.id := DISEASESEQUENCE.nextval;
END;

insert into disease(diseasename)  
select distinct disease from (select   disease from 
allinformation where not exists (select diseasename from disease))
-----Symptom ---

CREATE SEQUENCE SYMPTOMSEQUENCE
  MINVALUE 1
  MAXVALUE 999999999999999999999999999
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  commit
CREATE OR REPLACE TRIGGER symptomsTrigger
  BEFORE INSERT ON SYMPTOM
  FOR EACH ROW
BEGIN
  :new.id := SYMPTOMSEQUENCE.nextval;
END;
  
  commit;
insert into symptom(symptomName)  select distinct symptoms from (select   symptoms from allinformation where not exists 
(select symptomName from symptom))